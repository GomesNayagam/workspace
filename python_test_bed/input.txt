

([dD]ate.{1,4})((0?[1-9]|[12][0-9]|3[01])([.][ ]*)(0?[1-9]|1[012]))(([.][ ]*)(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2}))?($|(?=([^\w]?(\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))((0?[1-9]|[12][0-9]|3[01])(([-/.,][ ]*)|([ ]))(0?[1-9]|1[012]))((([-/.,][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)[0-9]{2}))($|(?=([^\w]?(\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))((0?[1-9]|[12][0-9]|3[01])((([-/.,][ ]*)|([ ]+)))?(January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec))(((([-/.,][ ]*)|([ ]+)))?(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2}))?($|(?=([^\w]?(\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))((January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec)((([-/.,][ ]*)|([ ]+)))?(0?[1-9]|[12][0-9]|3[01]))((([-/.,][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2}))?($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(([23]{0,1}1st|2?2nd|2?3rd|[12]{0,1}[4-9]th|1[123]th|[123]0th)(([-/.,][ ]*)|([ ]+))(January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec))((([-/.,][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2}))?($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))((January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec)(([-/.,][ ]*)|([ ]+))([23]{0,1}1st|2?2nd|2?3rd|[12]{0,1}[4-9]th|1[123]th|[123]0th))((([-/.,][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2}))?($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec|Q1|Q2|Q3|Q4)(January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec|Q1|Q2|Q3|Q4|-){0,2}(([ ]?[-/.,'][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2})($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(0?[1-9]|1[012])(([-/.,][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)[0-9]{2})($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2})((([-/.,][ ]*)|([ ]+)))?((January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec)((([-/.,][ ]*)|([ ]+)))?(0?[1-9]|[12][0-9]|3[01]))($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2})(([ ]?[-/.,'][ ]*)|([ ]+))(January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec|Q1|Q2|Q3|Q4){1,3}($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(((10|11|12|13|14|15|16|17|18|19|20)|`)[0-9]{2})(([-/.,][ ]*)|([ ]+))((0?[1-9]|1[012])(([-/.,][ ]*)|([ ]+))(0?[1-9]|[12][0-9]|3[01]))($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2})(([-/.]))((0?[1-9]|1[012])(([-/.,][ ]*)|([ ]+))(0?[1-9]|[12][0-9]|3[01]))($|(?=([^\w]?(\b|\s|$|[)]))))(?!\.\d)|
(^|(?<=[(\s.,<:;'"]))((0?[1-9]|1[012])(([-/.][ ]*))(0?[1-9]|[12][0-9]|3[01]))(([-/.][ ]*))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2})($|(?=([^\w]?(\b|\s|$|[)]))))|
(^|(?<=[(\s.,<:;'"]))([23]{0,1}1st|2?2nd|2?3rd|[12]{0,1}[4-9]th|1[123]th|[123]0th) of (January|February|March|April|May|June|July|August|September|October|November|December|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec)((([-/.,][ ]*)|([ ]+))(((10|11|12|13|14|15|16|17|18|19|20)|`)?[0-9]{2}))?($|(?=([^\w]?(\b|\s|$|[)]))))|
(in|in\sthe\sbeginning\sof|at\sthe\send\sof|since|since\sthe|until|until\sthe\syear|year|after|before|in\syear|in\sthe\syear|in\sthe)\s((19|20)[0-9]{2})s?\b



# -*- coding: utf-8 -*-
import re

class CurrencyExtractor:
    
    def __init__(self):
        self.regex1 = ur"(au[\$d]|cad|cny|dm|dem|eur|frf|gbp|hk[\$d]|inr|kr(w)?|nz[\$d]|rmb|rs|us[\$d]|\$|\¥|\€|\₣|\£|\₨|\₩)(\.)?\s*(((\d{1,3}[,.])+\d{3})|\d+)([,.]\d{1,3})?(?=\s|\,\D|\b)(\s*(thousand|million|billion|trillion|m\b|k\b|b\b|bn\b|mill\.?|bill\.?))?"
        self.regex2 = ur"(((\d{1,3}[,.])+\d{3})|\d+)([,.]\d{1,3})?\s*(thousand|million|billion|trillion|m|k|b|bn|mill\.?|bill\.?)?\s*(au[\$d]|cad|cny|dm|dem|eur|frf|gbp|hk[\$d]|inr|kr(w)?|nz[\$d]|rmb|rs|sek|twd|us[\$d]|buck(s)?|cents|(us\s)?dollar(s)?|euro|frank(s)?|krona|pence|pounds|rupees|quid|shilling|yuan|yen)($|(?=([^\w]?(\b|\s|$))))"
        self.regex3 = ur"\b((ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|fourty|forty|fifty|sixty|seventy|eighty|ninety|one|two|three|four|five|six|seven|eight|nine|hundred(\sand)?|thousand(\sand)?|million(\sand)?)\s)+(au[\$d]|cad|cny|dm|dem|eur|frf|gbp|hk[\$d]|inr|kr(w)?|nz[\$d]|rmb|rs|sek|twd|us[\$d]|buck(s)?|cents|(us\s)?dollar(s)?|euro|frank(s)?|krona|pence|pounds|rupees|quid|shilling|yuan|yen)"
 
if test:
    #'(?<=\s|^)' 
    regex1 = ur"(au[\$d]|cad|cny|dm|dem|eur|frf|gbp|hk[\$d]|inr|kr(w)?|nz[\$d]|rmb|rs|us[\$d]|\$|\¥|\€|\₣|\£|\₨|\₩)(\.)?\s*(((\d{1,3}[,.])+\d{3})|\d+)([,.]\d{1,3})?(?=\s|\,\D|\b)(\s*(thousand|million|billion|trillion|m\b|k\b|b\b|bn\b|mill\.?|bill\.?))?"
    
    regex2 = ur"(((\d{1,3}[,.])+\d{3})|\d+)([,.]\d{1,3})?\s*(thousand|million|billion|trillion|m|k|b|bn|mill\.?|bill\.?)?\s*(au[\$d]|cad|cny|dm|dem|eur|frf|gbp|hk[\$d]|inr|kr(w)?|nz[\$d]|rmb|rs|sek|twd|us[\$d]|buck(s)?|cents|(us\s)?dollar(s)?|euro|frank(s)?|krona|pence|pounds|rupees|quid|shilling|yuan|yen)($|(?=([^\w]?(\b|\s|$))))"
    
    regex3 = ur"\b((ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|fourty|forty|fifty|sixty|seventy|eighty|ninety|one|two|three|four|five|six|seven|eight|nine|hundred(\sand)?|thousand(\sand)?|million(\sand)?)\s)+(au[\$d]|cad|cny|dm|dem|eur|frf|gbp|hk[\$d]|inr|kr(w)?|nz[\$d]|rmb|rs|sek|twd|us[\$d]|buck(s)?|cents|(us\s)?dollar(s)?|euro|frank(s)?|krona|pence|pounds|rupees|quid|shilling|yuan|yen)"
    
    findstr = ur"$10 million in the Bank"
    
    findstr2 = ur"100 dollar in bank"
    
    findstr3 = ur"ten thousand and twenty dollar in my bank"
    
    moneyPattern = re.compile(regex1,flags=re.UNICODE|re.M|re.I)
    #money = re.findall(moneyPattern, findstr)
    
    matchObj = re.match(moneyPattern, findstr)
   
        
    #print person
    if matchObj:
        print "matchObj.group() : ", matchObj.group()
     
    print "Done" 
